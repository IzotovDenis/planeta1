
indexer
{
}

searchd
{
  listen = 127.0.0.1:9306:mysql41
  log = /home/dev/planeta/log/development.searchd.log
  query_log = /home/dev/planeta/log/development.searchd.query.log
  pid_file = /home/dev/planeta/log/development.sphinx.pid
  workers = threads
  binlog_path = /home/dev/planeta/tmp/binlog/development
}

source item_title_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = deployer
  sql_pass = deployer
  sql_db = planeta_development
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "items"."id" * 7 + 0 AS "id", properties -> 'Полное наименование' AS "full_name", "items"."id" AS "sphinx_internal_id", 'Item' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "items"."created_at")::int AS "created_at", extract(epoch from "items"."updated_at")::int AS "updated_at", "items"."group_id" AS "group_id", "items"."position" AS "position" FROM "items" LEFT OUTER JOIN "groups" ON "groups"."id" = "items"."group_id" WHERE ("items"."id" BETWEEN $start AND $end AND disabled = 'f' OR disabled IS NULL) GROUP BY "items"."id", "items"."id", "items"."created_at", "items"."updated_at", "items"."group_id", "items"."position"
  sql_query_range = SELECT COALESCE(MIN("items"."id"), 1), COALESCE(MAX("items"."id"), 1) FROM "items"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = group_id
  sql_attr_uint = position
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_field_string = full_name
}

index item_title_core
{
  type = plain
  path = /home/dev/planeta/db/sphinx/development/item_title_core
  docinfo = extern
  morphology = stem_ru
  stopwords = config/stopwords.txt
  wordforms = config/wordforms.txt
  charset_table = 0..9, U+410..U+42F->U+430..U+44F, U+430..U+44F, A->U+430,a->U+430, B->U+432, b->U+432, C->U+441, c->U+441, D->d, d, E->U+435, e->U+435, F->f, f, G->g, g, H->U+43d, h->U+43D, I->i, i, J->j, j, K->U+43A, k->U+43A, L->l, l, M->U+43C, m->U+43C, N->n, n, O->U+43E, o->U+43E, P->U+440, p->U+440, Q->q, q, R->r, r, S->s, s, T->U+442, t->U+442, U->u, u, V->v, v, W->w, w, X->U+445, x->U+445, Y->y, y, Z->z, z
  ignore_chars = (, )
  min_infix_len = 1
  enable_star = 1
  source = item_title_core_0
}

source item_article_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = deployer
  sql_pass = deployer
  sql_db = planeta_development
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "items"."id" * 7 + 0 AS "id", "items"."article" AS "article", "items"."id" AS "sphinx_internal_id", 'Item' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "items"."created_at")::int AS "created_at", extract(epoch from "items"."updated_at")::int AS "updated_at", "items"."group_id" AS "group_id", "items"."position" AS "position" FROM "items" LEFT OUTER JOIN "groups" ON "groups"."id" = "items"."group_id" WHERE ("items"."id" BETWEEN $start AND $end AND disabled = 'f' OR disabled IS NULL) GROUP BY "items"."id", "items"."article", "items"."id", "items"."created_at", "items"."updated_at", "items"."group_id", "items"."position"
  sql_query_range = SELECT COALESCE(MIN("items"."id"), 1), COALESCE(MAX("items"."id"), 1) FROM "items"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = group_id
  sql_attr_uint = position
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_field_string = article
}

index item_article_core
{
  type = plain
  path = /home/dev/planeta/db/sphinx/development/item_article_core
  docinfo = extern
  morphology = stem_ru
  stopwords = config/stopwords.txt
  wordforms = config/wordforms.txt
  charset_table = 0..9, U+410..U+42F->U+430..U+44F, U+430..U+44F, A->U+430,a->U+430, B->U+432, b->U+432, C->U+441, c->U+441, D->d, d, E->U+435, e->U+435, F->f, f, G->g, g, H->U+43d, h->U+43D, I->i, i, J->j, j, K->U+43A, k->U+43A, L->l, l, M->U+43C, m->U+43C, N->n, n, O->U+43E, o->U+43E, P->U+440, p->U+440, Q->q, q, R->r, r, S->s, s, T->U+442, t->U+442, U->u, u, V->v, v, W->w, w, X->U+445, x->U+445, Y->y, y, Z->z, z
  ignore_chars = (, )
  min_infix_len = 1
  enable_star = 1
  source = item_article_core_0
}

source item_cross_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = deployer
  sql_pass = deployer
  sql_db = planeta_development
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "items"."id" * 7 + 0 AS "id", array_to_string(items.cross, ' ', '*') AS "cross", "items"."id" AS "sphinx_internal_id", 'Item' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "items"."created_at")::int AS "created_at", extract(epoch from "items"."updated_at")::int AS "updated_at", "items"."group_id" AS "group_id", "items"."position" AS "position" FROM "items" LEFT OUTER JOIN "groups" ON "groups"."id" = "items"."group_id" WHERE ("items"."id" BETWEEN $start AND $end AND disabled = 'f' OR disabled IS NULL) GROUP BY "items"."id", "items"."id", "items"."created_at", "items"."updated_at", "items"."group_id", "items"."position"
  sql_query_range = SELECT COALESCE(MIN("items"."id"), 1), COALESCE(MAX("items"."id"), 1) FROM "items"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = group_id
  sql_attr_uint = position
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
}

index item_cross_core
{
  type = plain
  path = /home/dev/planeta/db/sphinx/development/item_cross_core
  docinfo = extern
  morphology = stem_ru
  stopwords = config/stopwords.txt
  wordforms = config/wordforms.txt
  charset_table = 0..9, U+410..U+42F->U+430..U+44F, U+430..U+44F, A->U+430,a->U+430, B->U+432, b->U+432, C->U+441, c->U+441, D->d, d, E->U+435, e->U+435, F->f, f, G->g, g, H->U+43d, h->U+43D, I->i, i, J->j, j, K->U+43A, k->U+43A, L->l, l, M->U+43C, m->U+43C, N->n, n, O->U+43E, o->U+43E, P->U+440, p->U+440, Q->q, q, R->r, r, S->s, s, T->U+442, t->U+442, U->u, u, V->v, v, W->w, w, X->U+445, x->U+445, Y->y, y, Z->z, z
  ignore_chars = (, )
  min_infix_len = 1
  enable_star = 1
  source = item_cross_core_0
}

source item_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = deployer
  sql_pass = deployer
  sql_db = planeta_development
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "items"."id" * 7 + 0 AS "id", properties -> 'Полное наименование' AS "full_name", properties -> 'Код товара' AS "kod", replace(properties -> 'ОЕМ', '-', '') AS "oem", array_to_string(items.cross, ' ', '*') AS "cross", "items"."article" AS "article", "items"."brand" AS "brand", "items"."id" AS "sphinx_internal_id", 'Item' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "items"."created_at")::int AS "created_at", extract(epoch from "items"."updated_at")::int AS "updated_at", "items"."group_id" AS "group_id", "items"."position" AS "position" FROM "items" LEFT OUTER JOIN "groups" ON "groups"."id" = "items"."group_id" WHERE ("items"."id" BETWEEN $start AND $end AND disabled = 'f' OR disabled IS NULL) GROUP BY "items"."id", "items"."article", "items"."brand", "items"."id", "items"."created_at", "items"."updated_at", "items"."group_id", "items"."position"
  sql_query_range = SELECT COALESCE(MIN("items"."id"), 1), COALESCE(MAX("items"."id"), 1) FROM "items"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = group_id
  sql_attr_uint = position
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_field_string = full_name
  sql_field_string = kod
  sql_field_string = oem
  sql_field_string = article
}

index item_core
{
  type = plain
  path = /home/dev/planeta/db/sphinx/development/item_core
  docinfo = extern
  morphology = stem_ru
  stopwords = config/stopwords.txt
  wordforms = config/wordforms.txt
  charset_table = 0..9, U+410..U+42F->U+430..U+44F, U+430..U+44F, A->U+430,a->U+430, B->U+432, b->U+432, C->U+441, c->U+441, D->d, d, E->U+435, e->U+435, F->f, f, G->g, g, H->U+43d, h->U+43D, I->i, i, J->j, j, K->U+43A, k->U+43A, L->l, l, M->U+43C, m->U+43C, N->n, n, O->U+43E, o->U+43E, P->U+440, p->U+440, Q->q, q, R->r, r, S->s, s, T->U+442, t->U+442, U->u, u, V->v, v, W->w, w, X->U+445, x->U+445, Y->y, y, Z->z, z
  ignore_chars = (, )
  min_infix_len = 1
  enable_star = 1
  source = item_core_0
}

source item_kod_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = deployer
  sql_pass = deployer
  sql_db = planeta_development
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "items"."id" * 7 + 0 AS "id", properties -> 'Код товара' AS "kod", "items"."id" AS "sphinx_internal_id", 'Item' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "items"."created_at")::int AS "created_at", extract(epoch from "items"."updated_at")::int AS "updated_at", "items"."group_id" AS "group_id", "items"."position" AS "position" FROM "items" LEFT OUTER JOIN "groups" ON "groups"."id" = "items"."group_id" WHERE ("items"."id" BETWEEN $start AND $end AND disabled = 'f' OR disabled IS NULL) GROUP BY "items"."id", "items"."id", "items"."created_at", "items"."updated_at", "items"."group_id", "items"."position"
  sql_query_range = SELECT COALESCE(MIN("items"."id"), 1), COALESCE(MAX("items"."id"), 1) FROM "items"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = group_id
  sql_attr_uint = position
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_field_string = kod
}

index item_kod_core
{
  type = plain
  path = /home/dev/planeta/db/sphinx/development/item_kod_core
  docinfo = extern
  morphology = stem_ru
  stopwords = config/stopwords.txt
  wordforms = config/wordforms.txt
  charset_table = 0..9, U+410..U+42F->U+430..U+44F, U+430..U+44F, A->U+430,a->U+430, B->U+432, b->U+432, C->U+441, c->U+441, D->d, d, E->U+435, e->U+435, F->f, f, G->g, g, H->U+43d, h->U+43D, I->i, i, J->j, j, K->U+43A, k->U+43A, L->l, l, M->U+43C, m->U+43C, N->n, n, O->U+43E, o->U+43E, P->U+440, p->U+440, Q->q, q, R->r, r, S->s, s, T->U+442, t->U+442, U->u, u, V->v, v, W->w, w, X->U+445, x->U+445, Y->y, y, Z->z, z
  ignore_chars = (, )
  min_infix_len = 1
  enable_star = 1
  source = item_kod_core_0
}

source item_oem_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = deployer
  sql_pass = deployer
  sql_db = planeta_development
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "items"."id" * 7 + 0 AS "id", replace(properties -> 'ОЕМ', '-', '') AS "oem", "items"."id" AS "sphinx_internal_id", 'Item' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "items"."created_at")::int AS "created_at", extract(epoch from "items"."updated_at")::int AS "updated_at", "items"."group_id" AS "group_id", "items"."position" AS "position" FROM "items" LEFT OUTER JOIN "groups" ON "groups"."id" = "items"."group_id" WHERE ("items"."id" BETWEEN $start AND $end AND disabled = 'f' OR disabled IS NULL) GROUP BY "items"."id", "items"."id", "items"."created_at", "items"."updated_at", "items"."group_id", "items"."position"
  sql_query_range = SELECT COALESCE(MIN("items"."id"), 1), COALESCE(MAX("items"."id"), 1) FROM "items"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = group_id
  sql_attr_uint = position
  sql_attr_timestamp = created_at
  sql_attr_timestamp = updated_at
  sql_attr_string = sphinx_internal_class
  sql_field_string = oem
}

index item_oem_core
{
  type = plain
  path = /home/dev/planeta/db/sphinx/development/item_oem_core
  docinfo = extern
  morphology = stem_ru
  stopwords = config/stopwords.txt
  wordforms = config/wordforms.txt
  charset_table = 0..9, U+410..U+42F->U+430..U+44F, U+430..U+44F, A->U+430,a->U+430, B->U+432, b->U+432, C->U+441, c->U+441, D->d, d, E->U+435, e->U+435, F->f, f, G->g, g, H->U+43d, h->U+43D, I->i, i, J->j, j, K->U+43A, k->U+43A, L->l, l, M->U+43C, m->U+43C, N->n, n, O->U+43E, o->U+43E, P->U+440, p->U+440, Q->q, q, R->r, r, S->s, s, T->U+442, t->U+442, U->u, u, V->v, v, W->w, w, X->U+445, x->U+445, Y->y, y, Z->z, z
  ignore_chars = (, )
  min_infix_len = 1
  enable_star = 1
  source = item_oem_core_0
}

index item
{
  type = distributed
  local = item_title_core
  local = item_article_core
  local = item_cross_core
  local = item_core
  local = item_kod_core
  local = item_oem_core
}
